name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run code generation
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Decode Android keystore
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
        echo "storeFile=keystore.jks" >> android/key.properties
        echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
        echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
        echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
        
    - name: Build web release
      run: |
        flutter build web --release \
          --dart-define=API_BASE_URL="${{ secrets.API_BASE_URL || 'https://golddrop.ir' }}" \
          --dart-define=BACKEND_API_KEY="${{ secrets.BACKEND_API_KEY }}" \
          --dart-define=APP_NAME="FinSnap" \
          --dart-define=SEND_RECEIPTS_TO_CLOUD=true \
          --dart-define=DEFAULT_CURRENCY=IRR \
          --dart-define=FCM_WEB_VAPID_KEY="${{ secrets.FCM_WEB_VAPID_KEY }}" \
          --dart-define=PUSH_ENABLED=true
          
    - name: Create web archive
      run: |
        cd build/web
        zip -r ../../finsnap-web-${{ github.ref_name }}.zip .
        cd ../..
        
    - name: Build Android App Bundle
      if: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        flutter build appbundle --release \
          --dart-define=API_BASE_URL="${{ secrets.API_BASE_URL || 'https://golddrop.ir' }}" \
          --dart-define=BACKEND_API_KEY="${{ secrets.BACKEND_API_KEY }}" \
          --dart-define=APP_NAME="FinSnap" \
          --dart-define=SEND_RECEIPTS_TO_CLOUD=true \
          --dart-define=DEFAULT_CURRENCY=IRR \
          --dart-define=PUSH_ENABLED=true
          
    - name: Build Android APK
      run: |
        flutter build apk --release \
          --dart-define=API_BASE_URL="${{ secrets.API_BASE_URL || 'https://golddrop.ir' }}" \
          --dart-define=BACKEND_API_KEY="${{ secrets.BACKEND_API_KEY }}" \
          --dart-define=APP_NAME="FinSnap" \
          --dart-define=SEND_RECEIPTS_TO_CLOUD=true \
          --dart-define=DEFAULT_CURRENCY=IRR \
          --dart-define=PUSH_ENABLED=true
          
    - name: Get tag version
      id: tag_version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Generate release notes
      id: generate_notes
      run: |
        echo "release_notes<<EOF" >> $GITHUB_OUTPUT
        echo "## FinSnap ${{ steps.tag_version.outputs.version }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ✨ Features" >> $GITHUB_OUTPUT
        echo "- Offline-first personal finance management" >> $GITHUB_OUTPUT
        echo "- OCR receipt processing with AI categorization" >> $GITHUB_OUTPUT
        echo "- Real-time expense tracking and reports" >> $GITHUB_OUTPUT
        echo "- Push notifications and daily evaluations" >> $GITHUB_OUTPUT
        echo "- PWA support with offline capabilities" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 📱 Platforms" >> $GITHUB_OUTPUT
        echo "- Web (PWA): \`finsnap-web-${{ steps.tag_version.outputs.version }}.zip\`" >> $GITHUB_OUTPUT
        if [ -f "build/app/outputs/bundle/release/app-release.aab" ]; then
          echo "- Android App Bundle: \`app-release.aab\`" >> $GITHUB_OUTPUT
        fi
        echo "- Android APK: \`app-release.apk\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 🔧 Installation" >> $GITHUB_OUTPUT
        echo "**Web (PWA):**" >> $GITHUB_OUTPUT
        echo "1. Extract \`finsnap-web-${{ steps.tag_version.outputs.version }}.zip\`" >> $GITHUB_OUTPUT
        echo "2. Serve the files from a web server" >> $GITHUB_OUTPUT
        echo "3. Visit the URL and install as PWA from browser menu" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "**Android:**" >> $GITHUB_OUTPUT
        echo "1. Download \`app-release.apk\`" >> $GITHUB_OUTPUT
        echo "2. Enable 'Install from unknown sources' in Android settings" >> $GITHUB_OUTPUT
        echo "3. Install the APK file" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 🔐 Security" >> $GITHUB_OUTPUT
        echo "- API keys are injected at build time via \`--dart-define\`" >> $GITHUB_OUTPUT
        echo "- No hardcoded secrets in the source code" >> $GITHUB_OUTPUT
        echo "- Receipt uploads require explicit user consent" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 🌐 Backend Integration" >> $GITHUB_OUTPUT
        echo "- Base URL: \`https://golddrop.ir/api/finapp/v1\`" >> $GITHUB_OUTPUT
        echo "- All data stored locally with optional cloud sync" >> $GITHUB_OUTPUT
        echo "- Offline-first architecture ensures app works without internet" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.version }}
        name: "FinSnap ${{ steps.tag_version.outputs.version }}"
        body: ${{ steps.generate_notes.outputs.release_notes }}
        draft: false
        prerelease: false
        files: |
          finsnap-web-${{ github.ref_name }}.zip
          build/app/outputs/flutter-apk/app-release.apk
          build/app/outputs/bundle/release/app-release.aab
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload to GitHub Pages (if enabled)
      if: ${{ secrets.DEPLOY_TO_PAGES == 'true' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/web
        cname: ${{ secrets.CUSTOM_DOMAIN }}
        
    - name: Notify on Discord (if configured)
      if: ${{ secrets.DISCORD_WEBHOOK }}
      run: |
        curl -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
          -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "🚀 FinSnap Release ${{ steps.tag_version.outputs.version }}",
              "description": "New version of FinSnap has been released!",
              "color": 0,
              "fields": [
                {
                  "name": "Version",
                  "value": "${{ steps.tag_version.outputs.version }}",
                  "inline": true
                },
                {
                  "name": "Platforms",
                  "value": "Web (PWA), Android APK/AAB",
                  "inline": true
                },
                {
                  "name": "Download",
                  "value": "[GitHub Releases](https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag_version.outputs.version }})",
                  "inline": false
                }
              ],
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'"
            }]
          }'